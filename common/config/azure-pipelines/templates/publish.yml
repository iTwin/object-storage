steps:
  - task: NodeTool@0
    displayName: Install Node@$(node20Version)
    inputs:
      versionSpec: $(node20Version)
      checkLatest: true

  - script: node common/scripts/install-run-rush.js install --purge
    displayName: rush install

  - script: node common/scripts/install-run-rush.js rebuild -v
    displayName: rush rebuild

  - script: git config --local user.email imodeljs-admin@users.noreply.github.com
    displayName: Set GitHub user email (needed by `rush version`)

  - script: node common/scripts/install-run-rush.js version --ensure-version-policy
    displayName: Ensure consistent version across all packages
    
  - powershell: |
      $cloudAgnosticCorePackageJson = Get-Content -Raw -Path cloud-agnostic/core/package.json | ConvertFrom-Json
      $newVersion = $cloudAgnosticCorePackageJson.version
      $npmTag = If ($newVersion -match "dev") {"nightly"} Else {"latest"}
      Write-Host "##vso[task.setvariable variable=resolvedNpmTag;]$npmTag"

      Write-Host New version is $newVersion and it will be tagged using $npmTag tag
    displayName: Resolve version tag

  - script: node common/scripts/install-run-rush.js publish --publish --include-all --set-access-level public --tag $(resolvedNpmTag)
    displayName: rush publish package
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    env:
      NPM_AUTH_TOKEN: $(npmToken)
